{
  "item": [
    {
      "id": "3606d3a4-9378-4054-95a4-7964e0544f8c",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "all"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "7d9fc32c-237b-4d9d-93ac-9b932312df2e",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "ee72c190-3f7a-42a8-84f4-7746af400c66",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "completed"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "98e0643c-c73f-43cd-9c16-83f1301ed9b0",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "c4707904-8abe-4033-882a-ec43d832be49",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "uncompleted"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d65f0615-9cdd-4f73-be86-4e2c7025d4a6",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "b1948c11-91f6-4ef1-bbbe-e4e2735e5dd7",
      "name": "[400] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "aaaa"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d53f2437-a1df-4345-8b99-59029df40ae2",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "569bf2d0-43a6-4711-ab6c-2b3774c0de8a",
      "name": "[201] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"Example  from API\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "1270cc9b-e26b-4537-91ca-bd48c2f04eb9",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 201\", function() {",
              "  pm.response.to.have.status(201);",
              "});",
              "// Set task from todo.id",
              "var jsonData = pm.response.json();",
              "pm.collectionVariables.set(\"task\", jsonData.todo.id);"
            ]
          }
        }
      ]
    },
    {
      "id": "0949dff1-af0e-4351-90d8-80f0e5b16daf",
      "name": "[400] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "641e0de2-78e0-4415-815d-6da0e85e638b",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "85f8e77d-b9be-4281-abcf-f90854e088fc",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "798b4aa8-3724-458e-8173-588fec08495f",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"description\": \"Task\",",
              "      \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "      \"properties\": {",
              "        \"id\": {",
              "          \"type\": \"string\",",
              "          \"readOnly\": true,",
              "          \"description\": \"Task ID\"",
              "        },",
              "        \"todo\": {",
              "          \"type\": \"string\",",
              "          \"description\": \"Task description\"",
              "        },",
              "        \"completed\": {",
              "          \"type\": \"boolean\",",
              "          \"description\": \"Is completed\"",
              "        },",
              "        \"created\": {",
              "          \"type\": \"string\",",
              "          \"format\": \"date-time\"",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "e1e5a6d4-149d-4e29-8baf-7bb5ee8dbcf4",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "aaaa"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "cb6b852c-bfc6-4697-a659-6322e7f5ed4d",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "83b09e7a-cb11-4c72-92da-bc220af2ac74",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4713c79e-f5e0-4dd8-93bc-49187b03eba8",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "e8f79b1b-478e-4e52-a31a-7b610708ca3f",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"completed\": true\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "bb2a2fcd-2800-42f6-8ec2-e8e89a9ca0ff",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "fa9defaa-aa01-4e26-b7e4-e4e779b806db",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"task updated from swagger\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "7c9941f2-4750-4316-83af-6a7478ab1535",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "9c189971-dec7-45d7-a230-7580b2434e8d",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ae118a7b-cf11-49ee-a6ee-8372508fb155",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "25c9731b-fc7f-4165-a400-9f85686f3827",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"task updated from swagger\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c71cd2fb-d5fb-43b8-a5ba-2cbf83893e6f",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "7ace2365-a251-414e-8869-57d028e21b53",
      "name": "[204] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "{{task}}"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c559b47c-0d30-41d7-b8e6-8014f6f1cd65",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Body is empty\", function() {",
              "  var data = pm.response.text();",
              "  pm.expect(data === undefined || data === '').to.eql(true);",
              "});",
              "pm.test(\"Status code is 204\", function() {",
              "  pm.response.to.have.status(204);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "024bb275-ffe5-45c3-a86e-12a52b52fd46",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "1234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4a2e603d-8b6c-4bb0-b010-6f6e17407b14",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "9cdb987b-8781-4a70-b79f-ac587546ba3c",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "dd5ca5f8-a8d8-4f0d-b82c-4dae3ef96929",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "base-url",
      "type": "string",
      "value": "http://localhost:3000/api",
      "key": "base-url"
    }
  ],
  "info": {
    "_postman_id": "88c46f79-8b61-4906-983f-37ed0e582b94",
    "name": "Swagger TODO",
    "version": {
      "raw": "1.0.0",
      "major": 1,
      "minor": 0,
      "patch": 0,
      "prerelease": [],
      "build": [],
      "string": "1.0.0"
    },
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  }
}