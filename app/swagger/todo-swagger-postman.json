{
  "item": [
    {
      "id": "a90d85a1-cff2-4fbb-bf40-924e3973d6b0",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "all"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "301572ca-c21c-4495-bce9-e710f4071228",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "78d7e234-c920-43c9-a226-62a4b5bbfa2e",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "completed"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "5f27b3bd-3861-4888-a9ff-b5135a6d6618",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "09ce9611-0377-40b9-a55a-0d0ba1f34a88",
      "name": "[200] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "uncompleted"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a5625971-aab4-4d35-8ada-2ded330b8fc7",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"required\": [\"status\", \"todo\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"type\": \"array\",",
              "      \"items\": {",
              "        \"description\": \"Task\",",
              "        \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "        \"properties\": {",
              "          \"id\": {",
              "            \"type\": \"string\",",
              "            \"readOnly\": true,",
              "            \"description\": \"Task ID\"",
              "          },",
              "          \"todo\": {",
              "            \"type\": \"string\",",
              "            \"description\": \"Task description\"",
              "          },",
              "          \"completed\": {",
              "            \"type\": \"boolean\",",
              "            \"description\": \"Is completed\"",
              "          },",
              "          \"created\": {",
              "            \"type\": \"string\",",
              "            \"format\": \"date-time\"",
              "          }",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "ca4e281b-e03c-4e4e-80b4-2f50a66a7466",
      "name": "[400] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [
            {
              "key": "status",
              "value": "aaaa"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d729bcc3-152a-4591-a20a-5d507c4bd118",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "2f0ed663-e964-4159-9da6-40dd30ed94c3",
      "name": "[201] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"Example  from API\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "55936510-dcd5-48db-bb0e-743c58017d60",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 201\", function() {",
              "  pm.response.to.have.status(201);",
              "});",
              "// Set task from todo.id",
              "var jsonData = pm.response.json();",
              "pm.collectionVariables.set(\"task\", jsonData.todo.id);"
            ]
          }
        }
      ]
    },
    {
      "id": "9c0f1281-6197-4dda-a554-84f6a14c4fb1",
      "name": "[400] on /todos",
      "request": {
        "url": {
          "path": [
            "todos"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c0be6183-ce42-4aa9-b191-aa7324690b76",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "6021b272-f6d4-408f-a729-61cda0918a87",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9e5ae07f-a974-4ba1-9565-317a0fa79731",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"status is true\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(true);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"todo\": {",
              "      \"description\": \"Task\",",
              "      \"required\": [\"id\", \"todo\", \"completed\", \"created\"],",
              "      \"properties\": {",
              "        \"id\": {",
              "          \"type\": \"string\",",
              "          \"readOnly\": true,",
              "          \"description\": \"Task ID\"",
              "        },",
              "        \"todo\": {",
              "          \"type\": \"string\",",
              "          \"description\": \"Task description\"",
              "        },",
              "        \"completed\": {",
              "          \"type\": \"boolean\",",
              "          \"description\": \"Is completed\"",
              "        },",
              "        \"created\": {",
              "          \"type\": \"string\",",
              "          \"format\": \"date-time\"",
              "        }",
              "      }",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "3243803a-26aa-413e-a67e-433a3b89a02c",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "aaaa"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "bc27b44d-2106-404b-8a8a-237bf4d846ce",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "a6c2f2ec-0f1c-43d0-bbca-4ddc6c02ce5a",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "adda350e-777c-467b-a846-562431abd0b7",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});",
              "pm.test(\"status is false\", function() {",
              "  var jsonData = pm.response.json();",
              "  pm.expect(jsonData.status).to.eql(false);",
              "});",
              "// Test whether the response matches the schema",
              "const responseSchema = {",
              "  \"description\": \"Error message\",",
              "  \"required\": [\"status\", \"error\"],",
              "  \"properties\": {",
              "    \"status\": {",
              "      \"type\": \"boolean\",",
              "      \"description\": \"Status operation\"",
              "    },",
              "    \"error\": {",
              "      \"type\": \"string\",",
              "      \"description\": \"Error message\"",
              "    }",
              "  }",
              "};",
              "",
              "var response = JSON.parse(responseBody);",
              "tests[\"Schema is valid\"] = tv4.validate(response, responseSchema);"
            ]
          }
        }
      ]
    },
    {
      "id": "8330e988-897e-4775-a326-bc253415da5c",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"completed\": true\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6c751a8e-92c1-46c0-8b9e-d1abd1af2bff",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "a2b3ad62-8a95-4231-b2dc-870566e4e15c",
      "name": "[200] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"task updated from swagger\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "e86ce58a-d057-463a-99b6-179a336f6773",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 200\", function() {",
              "  pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "64ad0ba4-ab08-461d-aa3d-1a12b68bc18d",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "609cbf8974641d563ccb0701"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "86b210c5-e5b6-4238-81ef-92aa65bfb0b4",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "4087dc6c-c0f8-4b26-8dc2-034e00a6124c",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": "application/json"
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "body": {
          "mode": "raw",
          "raw": "{\n    \"todo\": \"task updated from swagger\"\n}"
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ccd58056-dc2d-4532-a37d-b33291f9682b",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "dd8cc727-32f1-4fb9-9469-df9fcd635910",
      "name": "[204] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "{{task}}"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "f084b8c3-da48-4242-892a-b1da37b812c1",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Body is empty\", function() {",
              "  var data = pm.response.text();",
              "  pm.expect(data === undefined || data === '').to.eql(true);",
              "});",
              "pm.test(\"Status code is 204\", function() {",
              "  pm.response.to.have.status(204);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "bc35dcfd-3832-4bda-a3bc-8b25b4caa73b",
      "name": "[400] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "1234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6f32687e-ecfe-44d7-a929-49647af0bea4",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 400\", function() {",
              "  pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "id": "86bb95cf-7f6a-4d93-a86c-7865a4efcc6b",
      "name": "[404] on /todos/:id",
      "request": {
        "url": {
          "path": [
            "todos",
            ":id"
          ],
          "host": [
            "{{base-url}}"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "123456789012345678901234"
            }
          ]
        },
        "header": [
          {
            "key": "accept",
            "value": ""
          },
          {
            "key": "content-type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "body": {
          "mode": "formData",
          "formdata": []
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "25fa6ff3-c5e8-4987-855e-b20dfeeb9330",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Content-Type is present\", function() {",
              "  pm.expect(pm.response.headers.has(\"Content-Type\", \"application/json\"));",
              "});",
              "pm.test(\"Status code is 404\", function() {",
              "  pm.response.to.have.status(404);",
              "});"
            ]
          }
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "id": "base-url",
      "type": "string",
      "value": "http://localhost:3000/api",
      "key": "base-url"
    }
  ],
  "info": {
    "_postman_id": "5e49b906-e097-4e09-8c0d-25c01139539c",
    "name": "Swagger TODO",
    "version": {
      "raw": "1.0.0",
      "major": 1,
      "minor": 0,
      "patch": 0,
      "prerelease": [],
      "build": [],
      "string": "1.0.0"
    },
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  }
}